/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public static void recur(TreeNode root,int sum,List<List<Integer>> list,List<Integer> sublist){
        
        if(root==null)
            return;
        
        sublist.add(root.val);
        if(root.left==null && root.right==null && root.val==sum){
            list.add(new ArrayList(sublist));
        }            
        
        recur(root.left,sum-root.val,list,sublist);
        recur(root.right,sum-root.val,list,sublist);
        sublist.remove(sublist.size()-1);
    }
    public List<List<Integer>> pathSum(TreeNode root, int sum) {
        List<List<Integer>> list = new ArrayList<>();
        List<Integer> sublist = new ArrayList<>();
        recur(root,sum,list,sublist);
        
        return list;
    }
}
